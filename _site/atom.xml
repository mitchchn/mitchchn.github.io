<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>mitchchn.me</title>
 <link href="http://mitchchn.me/atom.xml" rel="self"/>
 <link href="http://mitchchn.me/"/>
 <updated>2014-05-07T14:51:52-04:00</updated>
 <id>http://mitchchn.me</id>
 <author>
   <name>Mitchell Cohen</name>
   <email></email>
 </author>

 
 <entry>
   <title>Coding for Journalists, Part 1: Text Editing and First Steps with HTML</title>
   <link href="http://mitchchn.me/2014/05/06/coding-for-journalists-p1/"/>
   <updated>2014-05-06T00:00:00-04:00</updated>
   <id>http://mitchchn.me/2014/05/06/coding-for-journalists-p1</id>
   <content type="html">&lt;p&gt;&lt;img class=&quot;&quot; src=&quot;/public/img/confession.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;All code, no matter the language, is written in plain text. Plain text documents are those that don’t allow for any formatting, such as applying fonts, colours, and sizes. Documents that permit formatting are called rich text.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/public/img/plaintext.png&quot; width=&quot;49%&quot; /&gt;
    &lt;img src=&quot;/public/img/richtext.png&quot; width=&quot;49%&quot; /&gt;
    &lt;figcaption&gt;&lt;span class=&quot;elegant&quot;&gt;Plain and Rich&amp;mdash;&lt;/span&gt; Even if we were to change the font in the right document to match that of the left, it still wouldn&#39;t be plain text. It&#39;s the underlying file format that counts.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Rich text is what you produce in Microsoft Word or the visual editor in your CMS. Another name for it is &lt;abbr title=&quot;What You See is What You Get&quot;&gt;WYSIWYG&lt;/abbr&gt;. But plain text is the only format web browsers truly understand. To start writing HTML, you’ll need to to write plain text with a &lt;strong&gt;text editor.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;choose-your-editor&quot;&gt;Choose your editor&lt;/h2&gt;

&lt;p&gt;In the hands of a skilled coder, a text editor is like a Jedi’s lightsaber: &lt;em&gt;not as clumsy or random as a word processor. An elegant weapon, for a more civilized age.&lt;/em&gt; Armed with her trusty text editor, a coder can whip up anything from a blog post to the next Facebook. The only limits are her imagination, her free time, and her venture capital.&lt;/p&gt;

&lt;p&gt;Which text editor you decide to code with is a matter of personal taste. Like any tool, use the one you find most comfortable. Since plain text is a free and open format, you can always switch later.&lt;/p&gt;

&lt;p&gt;Windows and OS X come with &lt;strong&gt;Notepad&lt;/strong&gt; and &lt;strong&gt;TextEdit&lt;/strong&gt;, respectively. They can both get the job done, but they’re missing some helpful quality-of-life features. Two fantastic and free alternatives are &lt;a href=&quot;http://www.notepad-plus-plus.org&quot;&gt;Notepad++&lt;/a&gt; for PCs and &lt;a href=&quot;http://barebones.com/products/textwrangler/&quot;&gt;TextWrangler&lt;/a&gt; for the Mac. For the rest of this series, we’ll assume you’re using one of these apps.&lt;/p&gt;

&lt;p&gt;Text editors are for more than just code. They’re ideal for writing, too. There are &lt;a href=&quot;http://bettermess.com/a-plain-text-primer/&quot;&gt;many reasons&lt;/a&gt; to do your online writing in plain text, and I won’t &lt;a href=&quot;http://www.macworld.com/article/1161549/forget_fancy_formatting_why_plain_text_is_best.html&quot;&gt;cover them&lt;/a&gt; in this post. But the most important reason is quite simple: &lt;strong&gt;everything you publish on the web ends up as plain text.&lt;/strong&gt; Specifically, it ends up as HTML.&lt;/p&gt;

&lt;p&gt;Even if you write your articles in Google Drive or MS Word, they’re going to be converted to plain text and HTML at some point. (And if you’ve ever copied and pasted from Word into WordPress, you’ll know that plenty gets lost in translation.)&lt;/p&gt;

&lt;p&gt;If you write online, you’ll find you just can’t avoid plain text and HTML—no matter how hard you try. So skip the middleman: practice coding &lt;em&gt;and&lt;/em&gt; writing in your text editor. It will make your life much simpler.&lt;sup id=&quot;fnref:format&quot;&gt;&lt;a href=&quot;#fn:format&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&quot;get-your-code-on&quot;&gt;Get your code on&lt;/h2&gt;

&lt;p&gt;Once you’ve downloaded and installed a text editor, open it up to a blank document. Since you’re a writer, the first thing you’ll want to do is turn on word wrap:&lt;sup id=&quot;fnref:wrap&quot;&gt;&lt;a href=&quot;#fn:wrap&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/public/img/wrap_tw.png&quot; /&gt;
    &lt;figcaption&gt;&lt;span class=&quot;elegant&quot;&gt;Enabling word wrap&amp;mdash;&lt;/span&gt;In &lt;strong&gt;TextWrangler&lt;/strong&gt;, click the &lt;strong&gt;T&lt;/strong&gt; in the top left corner and choose &lt;em&gt;Soft Wrap Text&lt;/em&gt;. In &lt;strong&gt;Notepad++&lt;/strong&gt;, go to the &lt;strong&gt;View&lt;/strong&gt; menu and choose &lt;em&gt;Word wrap&lt;/em&gt;.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Next, copy or type the following line of code into your editor:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Hello &amp;lt;strong&amp;gt;World&amp;lt;/strong&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Save your document. Name it &lt;code&gt;helloworld.html&lt;/code&gt;. (Make sure the extension is &lt;code&gt;.html&lt;/code&gt; and not &lt;code&gt;.txt&lt;/code&gt; or &lt;code&gt;.html.txt&lt;/code&gt;.) Save it to the Desktop or a folder where you can easily find it.&lt;sup id=&quot;fnref:src&quot;&gt;&lt;a href=&quot;#fn:src&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; If you’ve named the file correctly, your editor will recognize that you’re writing HTML code and highlight the &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tags in a distinctive colour.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/public/img/helloworld_tw.png&quot; /&gt;
    &lt;figcaption&gt;&lt;span class=&quot;elegant&quot;&gt;MY FIRST HTML&amp;mdash;&lt;/span&gt;I saved my document as &lt;code&gt;helloworld.html&lt;/code&gt; and TextWrangler gave me purple code for my efforts. Your colours might be different.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Once you’ve saved your &lt;code&gt;helloworld.html&lt;/code&gt; file, locate it in your file manager and double-click it. It should launch your computer’s default web browser. If that doesn’t happen, right click on the file and select &lt;strong&gt;Open With&lt;/strong&gt;, then choose your browser. You should then see your new HTML page in its full glory:&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/public/img/helloworld.png&quot; /&gt;
    &lt;figcaption&gt;&lt;span class=&quot;elegant&quot;&gt;A webpage&amp;mdash;&lt;/span&gt; If you see something else (for instance, bits and pieces of the word &lt;strong&gt;&amp;lt;strong&amp;gt;&lt;/strong&gt;) or no formatting at all, go back and double-check the line of code above. Then save your file and try again. If you are using TextEdit on Mac, make sure you&#39;re in plain text mode (&lt;strong&gt;Format &amp;gt; Make Plain Text&lt;/strong&gt;). If you&#39;re using MS Word... don&#39;t be.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;At this point, you likely have a good of what it is that &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; does. Web browsers will &lt;b&gt;bolden&lt;/b&gt; any text between &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; and its closing tag, &lt;code&gt;&amp;lt;/strong&amp;gt;&lt;/code&gt;. (All closing tags begin with a forward slash, &lt;strong&gt;”/”&lt;/strong&gt;.)&lt;/p&gt;

&lt;p&gt;Let’s try a different tag. Go back to your file and change the opening &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tag to &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;. Do the same to its closing tag: &lt;code&gt;&amp;lt;/em&amp;gt;&lt;/code&gt;. Your code should look now like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Hello &amp;lt;em&amp;gt;World&amp;lt;/em&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Save your file, then go back to your web browser and refresh the page (&lt;kbd&gt;⌘&lt;/kbd&gt;+&lt;kbd&gt;R&lt;/kbd&gt; on a Mac, or &lt;kbd&gt;F5&lt;/kbd&gt; on Windows). You will need to refresh your browser whenever you make changes to an HTML file for those changes to show up. You should now see this in your browser:&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/public/img/helloworld_it.png&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Simple stuff. The &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tag tells the browser to make text &lt;strong&gt;strong&lt;/strong&gt; (bold), and the &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; tag tells the browser to &lt;em&gt;emphasize&lt;/em&gt; (italicize) it.&lt;sup id=&quot;fnref:html5&quot;&gt;&lt;a href=&quot;#fn:html5&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; Tags, or elements, are all the words between triangle brackets. They’re visible in your text editor but not in your web browser. Closing tags begin with slashes. Any text between opening and closing tags is affected by those tags. If you grasp these points, you fundamentally understand HTML.&lt;/p&gt;

&lt;p&gt;Of course, the rabbit hole goes much deeper—as we will soon see. For now, practice writing longer blocks of text and formatting them with &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;. Try these exercises:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Combine multiple &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tags.&lt;/li&gt;
  &lt;li&gt;Put an &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; tag right next to a &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
  &lt;li&gt;See what happens when you leave out a closing tag.&lt;/li&gt;
  &lt;li&gt;Go wild. Don’t worry. You can’t break anything. (At least, not until we get to JavaScript!)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Next time, we’ll go into more detail about the way tags behave and what happens when they shack up with other tags. Are you sick of the word “tag” yet? I hope not. See you soon.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:format&quot;&gt;
      &lt;p&gt;If you’re already kinda familiar with HTML and want to start doing more of your writing in plain text, &lt;a href=&quot;http://code.tutsplus.com/tutorials/markdown-the-ins-and-outs--net-25482&quot;&gt;Markdown&lt;/a&gt; is for you. &lt;a href=&quot;#fnref:format&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:wrap&quot;&gt;
      &lt;p&gt;Web developers don’t typically use word wrap. Instead, they follow a convention of manually limiting each line of code to 80 characters long. But when you’re composing paragraphs, having to press &lt;kbd&gt;enter&lt;/kbd&gt; once every 80 characters gets pretty ridiculous. So turn on word wrap, but try to respect the rule when writing lines that only contain code. &lt;a href=&quot;#fnref:wrap&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:src&quot;&gt;
      &lt;p&gt;For bonus nerd points, save all your code to a folder named &lt;b&gt;src&lt;/b&gt; (short for “source [code]”). &lt;a href=&quot;#fnref:src&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:html5&quot;&gt;
      &lt;p&gt;If you learned HTML several years ago, you may be wondering why I’m using &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; instead of &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt;. We’re already running into a major change in HTML5, which does away with tags that are strictly presentational in favour of tags that are &lt;em&gt;semantic&lt;/em&gt;. We’ll learn more about this soon. &lt;a href=&quot;#fnref:html5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Coding for Journalists, Part 0: Why Code?</title>
   <link href="http://mitchchn.me/2014/05/03/coding-for-journalists-p0/"/>
   <updated>2014-05-03T00:00:00-04:00</updated>
   <id>http://mitchchn.me/2014/05/03/coding-for-journalists-p0</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.niemanlab.org/2012/09/miranda-mulligan-want-to-produce-hirable-grads-journalism-schools-teach-them-to-code/&quot;&gt;Learn to code&lt;/a&gt;, they say.&lt;/p&gt;

&lt;p&gt;It’s advice that most of us have heard at school or in a newsroom, but that few of us ever really act upon.&lt;/p&gt;

&lt;p&gt;And no, it’s not because we aren’t &lt;a href=&quot;http://j-source.ca/article/opinion-why-journalism-schools-must-teach-code—even-if-every-journalist-not-wired-way&quot;&gt;wired that way&lt;/a&gt;. We’re smart, adaptable people. The trouble with coding is that it’s so detached from what we know and what we’re good at. We’re writers, researchers, and reporters. That’s our trade. We don’t have the time or motivation to futz around with arcane syntax, any more than we have the time to learn plumbing. We’re just not interested. We’d rather be writing.&lt;/p&gt;

&lt;p&gt;Advocates for teaching code like to go on about “digital literacy” and how important it is. They’ll tell you that you need to start learning code &lt;em&gt;right this second&lt;/em&gt; because otherwise no one will hire you, ever, and, hey, you’re missing out, so-get-with-the-program-already. They mean well, but I’m not a fan of this line of reasoning. Not only is it condescending to call educated people illiterate for not possessing a skill outside of their field, but you won’t encourage &lt;em&gt;anyone&lt;/em&gt; to step out of their comfort zone and learn something new by guilting them into doing it.&lt;sup id=&quot;fnref:driver&quot;&gt;&lt;a href=&quot;#fn:driver&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Truth is, it isn’t necessary for the whole world to learn how to code. People in most professions can ignore programming entirely and not be any worse off for it. Not everyone needs to be make an app or be a &lt;a href=&quot;https://www.youtube.com/watch?v=dFUlAQZB9Ng&quot;&gt;badass hacker&lt;/a&gt;. There’s little point in code-for-code’s-sake, and less point in teaching programming to every single person in college or kindergarten, or whenever we’re supposed to have learned it.&lt;/p&gt;

&lt;p&gt;That said, a certain kind of coding &lt;em&gt;is&lt;/em&gt; useful for journalists who write on the web. And in 2014, that means pretty much all of us. That alone is a good enough reason to learn what practical coding is all about and how (and why) we should integrate it into our work.&lt;/p&gt;

&lt;p&gt;Of course, that’s easier said than done. The online tutorials that exist are, for the most part, unhelpful and irrelevant. They’re out of date, teaching code and techniques that were current in the mid-00s or earlier. But even the good resources are geared toward developers and designers, not writers. They cover topics we don’t need to know about, and leave out others that we should. They don’t teach us how code can actually enrich our online writing and help us work more efficiently. (Most of us aren’t even aware that code &lt;em&gt;can&lt;/em&gt; help us work more efficiently.)&lt;/p&gt;

&lt;p&gt;Yes, it’s possible to code up flashy animations, interactive features, and data-stuffed bonanzas. But we can also use code on a smaller scale in our day-to-day writing. The goal of this series is to show you how.&lt;/p&gt;

&lt;h2 id=&quot;who-is-this-for&quot;&gt;Who is this for?&lt;/h2&gt;

&lt;p&gt;This series of posts is aimed at journalists and other kinds of writers. For that reason, it’s going to follow a different path from most “Intro to HTML” tutorials.&lt;sup id=&quot;fnref:hyper&quot;&gt;&lt;a href=&quot;#fn:hyper&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; You won’t learn how to build a website or app from scratch (although you could certainly go on to do just that), but you will learn languages, techniques and best practices that you can apply whenever you make content for the web.&lt;/p&gt;

&lt;p&gt;Apart from code itself, we’re going to cover tools that can make you &lt;a href=&quot;https://www.youtube.com/watch?v=xK0njkATf84&amp;amp;feature=kp&quot;&gt;happier and more productive&lt;/a&gt; as a digital creator, such as version control, secure backups, and writing in Markdown. These topics are outside the scope of a typical web development course, but they’re incredibly useful for anyone who writes online.&lt;/p&gt;

&lt;p&gt;If you’ve put off learning HTML at least a dozen times before, this is the series for you. If you know some web programming but begrudge having to use it, I hope I can change your mind. Code isn’t just a last-ditch resort for when WordPress is screwing up your formatting; it’s something you can learn to appreciate on its terms. That’s because it’s the simplest and most direct way of manipulating the web.&lt;/p&gt;

&lt;p&gt;The idea is to go from “knowing” HTML to &lt;em&gt;using&lt;/em&gt; HTML in a way that’s precise and effective. Like &lt;a href=&quot;http://en.wikipedia.org/wiki/The_Book_of_Five_Rings&quot;&gt;Miyamoto Musashi&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It’s true that getting to that stage takes some practice and time investment. But being able to work in code is worth it—not just for your resume, but to add to your personal arsenal of skills as a writer.&lt;/p&gt;

&lt;p&gt;And if you’re already an HTML pro, stick around. You might still learn a thing or two.&lt;/p&gt;

&lt;h2 id=&quot;what-were-gonna-learn&quot;&gt;What we’re gonna learn&lt;/h2&gt;

&lt;p&gt;No one who works in media needs any convincing that the web matters. In a few short years, the conversation has shifted from ‘digital” to “digital first” to “digital only.” For many of us, web has completely replaced pen and paper as our tool of the trade.&lt;/p&gt;

&lt;p&gt;So we should probably have some idea how it works. Just as print journalists should know what happens between the time when a draft leaves their desk and the newspaper hits a doorstop, web writers should have a general understanding of the technologies that power the modern Internet. That’s why one aim of this series is to provide context by explaining things like what goes on behind the scenes in your CMS when you write a post.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/img/HTML5_Logo_512.png&quot; style=&quot;float: right; width: 25%; height: 25%&quot; /&gt;
But before we get that far, we have to start with the basics. That includes learning about &lt;strong&gt;HTML&lt;/strong&gt;, &lt;strong&gt;CSS&lt;/strong&gt;, and &lt;strong&gt;JavaScript&lt;/strong&gt;, the trifecta of languages that make up the modern web. Of the three, HTML is by far the most relevant to writers, so we are going to spend many of these posts learning how to write it in a way that’s stylistically modern and clean. Afterward, we’ll talk about tools that can make writing code easier and more enjoyable—and come up with a web production workflow that you can use from your first draft right up until you hit “publish.”&lt;/p&gt;

&lt;p&gt;The first tutorials may seem simplistic if you’ve studied HTML before, but it may be worth your while to skim them—especially if you learned HTML more than a couple years ago. The web is always changing, and web culture and technology changes with it. This series covers &lt;strong&gt;HTML5&lt;/strong&gt;—the newest version of the venerable standard. It’s much like the earlier versions, but makes some important syntax and philosophical changes that affect even the most basic code.&lt;/p&gt;

&lt;p&gt;We’ll start later this week with &lt;strong&gt;Part 1:&lt;/strong&gt; &lt;a href=&quot;/2014/05/06/coding-for-journalists-p1&quot;&gt;Text Editing — Reppin’ It Old School&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:driver&quot;&gt;
      &lt;p&gt;Yes mum, I’ll get my driver’s license soon. Promise. I &lt;em&gt;know&lt;/em&gt; it’s embarrassing that I’m 24 and I still don’t have it. OK, technically I had it but I let it expire. But that’s besides the point. I’ll get around to it. Next month. Maybe? &lt;a href=&quot;#fnref:driver&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:hyper&quot;&gt;
      &lt;p&gt;For instance, I won’t bother explaining that HTML stands for “Hypertext Markup Language.” No one has called it that since 1993. Seriously. &lt;a href=&quot;#fnref:hyper&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
 </entry>
 

</feed>
